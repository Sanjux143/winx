Index: src/main/java/com/winlator/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.winlator;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.Settings;\r\nimport android.text.Html;\r\nimport android.text.method.LinkMovementMethod;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.IntRange;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.winlator.contentdialog.ContentDialog;\r\nimport com.winlator.contentdialog.SaveEditDialog;\r\nimport com.winlator.contentdialog.SaveSettingsDialog;\r\nimport com.winlator.core.Callback;\r\nimport com.winlator.core.PreloaderDialog;\r\nimport com.winlator.container.ContainerManager;\r\nimport com.winlator.saves.CustomFilePickerActivity;\r\nimport com.winlator.saves.Save;\r\nimport com.winlator.saves.SaveManager;\r\nimport com.winlator.xenvironment.ImageFsInstaller;\r\n\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    public static final @IntRange(from = 1, to = 19) byte CONTAINER_PATTERN_COMPRESSION_LEVEL = 9;\r\n    public static final byte PERMISSION_WRITE_EXTERNAL_STORAGE_REQUEST_CODE = 1;\r\n    public static final byte OPEN_FILE_REQUEST_CODE = 2;\r\n    public static final byte EDIT_INPUT_CONTROLS_REQUEST_CODE = 3;\r\n    public static final byte OPEN_DIRECTORY_REQUEST_CODE = 4;\r\n    private DrawerLayout drawerLayout;\r\n    public final PreloaderDialog preloaderDialog = new PreloaderDialog(this);\r\n    private boolean editInputControls = false;\r\n    private int selectedProfileId;\r\n    private Callback<Uri> openFileCallback;\r\n    private SharedPreferences sharedPreferences;\r\n\r\n    // Add SaveSettingsDialog and SaveEditDialog instances\r\n    private SaveSettingsDialog saveSettingsDialog;\r\n    private SaveEditDialog saveEditDialog;\r\n    private SaveManager saveManager;\r\n    private ContainerManager containerManager;\r\n\r\n    private SaveEditDialog currentSaveEditDialog;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.main_activity);\r\n\r\n        drawerLayout = findViewById(R.id.DrawerLayout);\r\n        NavigationView navigationView = findViewById(R.id.NavigationView);\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n\r\n        setSupportActionBar(findViewById(R.id.Toolbar));\r\n        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) {\r\n            actionBar.setDisplayHomeAsUpEnabled(true);\r\n            actionBar.setHomeAsUpIndicator(R.drawable.icon_action_bar_menu);\r\n        }\r\n\r\n        // Initialize SaveManager and ContainerManager\r\n        saveManager = new SaveManager(this);\r\n        containerManager = new ContainerManager(this);\r\n\r\n        Intent intent = getIntent();\r\n        editInputControls = intent.getBooleanExtra(\"edit_input_controls\", false);\r\n        if (editInputControls) {\r\n            selectedProfileId = intent.getIntExtra(\"selected_profile_id\", 0);\r\n            actionBar.setHomeAsUpIndicator(R.drawable.icon_action_bar_back);\r\n            onNavigationItemSelected(navigationView.getMenu().findItem(R.id.main_menu_input_controls));\r\n            navigationView.setCheckedItem(R.id.main_menu_input_controls);\r\n        } else {\r\n            int selectedMenuItemId = intent.getIntExtra(\"selected_menu_item_id\", 0);\r\n            int menuItemId = selectedMenuItemId > 0 ? selectedMenuItemId : R.id.main_menu_containers;\r\n\r\n            actionBar.setHomeAsUpIndicator(R.drawable.icon_action_bar_menu);\r\n            onNavigationItemSelected(navigationView.getMenu().findItem(menuItemId));\r\n            navigationView.setCheckedItem(menuItemId);\r\n\r\n            if (!requestAppPermissions()) {\r\n                ImageFsInstaller.installIfNeeded(this);\r\n            }\r\n\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R && !Environment.isExternalStorageManager()) {\r\n                showAllFilesAccessDialog();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void showAllFilesAccessDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"All Files Access Required\")\r\n                .setMessage(\"In order to grant access to additional storage devices such as USB storage device, the All Files Access permission must be granted. Press Okay to grant All Files Access in your Android Settings.\")\r\n                .setPositiveButton(\"Okay\", (dialog, which) -> {\r\n                    Intent intent = new Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);\r\n                    intent.setData(Uri.parse(\"package:\" + getPackageName()));\r\n                    startActivity(intent);\r\n                })\r\n                .setNegativeButton(\"Cancel\", null)\r\n                .show();\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == PERMISSION_WRITE_EXTERNAL_STORAGE_REQUEST_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                ImageFsInstaller.installIfNeeded(this);\r\n            }\r\n            else finish();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        Log.d(\"WinActivity\", \"onActivityResult called with requestCode: \" + requestCode + \" and resultCode: \" + resultCode);\r\n\r\n        if (saveSettingsDialog != null && saveSettingsDialog.isShowing()) {\r\n            Log.d(\"WinActivity\", \"Forwarding result to SaveSettingsDialog\");\r\n            saveSettingsDialog.onActivityResult(requestCode, resultCode, data);\r\n        } else if (saveEditDialog != null && saveEditDialog.isShowing()) {\r\n            Log.d(\"WinActivity\", \"Forwarding result to SaveEditDialog\");\r\n            saveEditDialog.onActivityResult(requestCode, resultCode, data);\r\n        } else {\r\n            Log.d(\"WinActivity\", \"No dialog found for request code: \" + requestCode);\r\n        }\r\n    }\r\n\r\n    private void showSavesFragment() {\r\n        SavesFragment fragment = new SavesFragment();\r\n        getSupportFragmentManager().beginTransaction()\r\n                .replace(R.id.FLFragmentContainer, fragment)\r\n                .commit();\r\n    }\r\n\r\n    // Method to show SaveEditDialog\r\n    public void showSaveEditDialog(Save saveToEdit) {\r\n        saveEditDialog = new SaveEditDialog(this, saveManager, containerManager, saveToEdit);\r\n        saveEditDialog.show();\r\n    }\r\n\r\n    public void onSaveAdded() {\r\n        Fragment currentFragment = getSupportFragmentManager().findFragmentById(R.id.FLFragmentContainer);\r\n        if (currentFragment instanceof SavesFragment) {\r\n            ((SavesFragment) currentFragment).refreshSavesList();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        List<Fragment> fragments = fragmentManager.getFragments();\r\n        for (Fragment fragment : fragments) {\r\n            if (fragment instanceof ContainersFragment && fragment.isVisible()) {\r\n                finish();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (fragmentManager.getBackStackEntryCount() > 0)\r\n            fragmentManager.popBackStack();\r\n        else\r\n            show(new ContainersFragment());\r\n    }\r\n\r\n    public void setOpenFileCallback(Callback<Uri> openFileCallback) {\r\n        this.openFileCallback = openFileCallback;\r\n    }\r\n\r\n    private boolean requestAppPermissions() {\r\n        boolean hasWritePermission = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;\r\n        boolean hasReadPermission = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;\r\n        boolean hasManageStoragePermission = Build.VERSION.SDK_INT < Build.VERSION_CODES.R || Environment.isExternalStorageManager();\r\n\r\n        if (hasWritePermission && hasReadPermission && hasManageStoragePermission) {\r\n            return false; // All permissions are granted\r\n        }\r\n\r\n        if (!hasWritePermission || !hasReadPermission) {\r\n            String[] permissions = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE};\r\n            ActivityCompat.requestPermissions(this, permissions, PERMISSION_WRITE_EXTERNAL_STORAGE_REQUEST_CODE);\r\n        }\r\n\r\n        return true; // Permissions are still being requested\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem menuItem) {\r\n        if (menuItem.getItemId() == android.R.id.home) {\r\n            // Toggle the drawer\r\n            if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n                drawerLayout.closeDrawer(GravityCompat.START);\r\n            } else {\r\n                drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n            return true;\r\n        } else if (menuItem.getItemId() == R.id.saves_menu_add) {\r\n            // Check if we are editing a save\r\n            Intent intent = getIntent();\r\n            int editSaveId = intent.getIntExtra(\"edit_save_id\", -1);\r\n            Save saveToEdit = editSaveId >= 0 ? saveManager.getSaveById(editSaveId) : null;\r\n\r\n            // Create and show SaveEditDialog or SaveSettingsDialog as appropriate\r\n            if (saveToEdit != null) {\r\n                // Ensure previous dialog is dismissed before showing a new one\r\n                if (saveEditDialog != null && saveEditDialog.isShowing()) {\r\n                    saveEditDialog.dismiss();\r\n                }\r\n                showSaveEditDialog(saveToEdit); // Use the correct method to show SaveEditDialog\r\n            } else {\r\n                saveSettingsDialog = new SaveSettingsDialog(this, saveManager, containerManager);\r\n                saveSettingsDialog.show();\r\n            }\r\n            return true;\r\n        } else {\r\n            return super.onOptionsItemSelected(menuItem);\r\n        }\r\n    }\r\n\r\n    public void toggleDrawer() {\r\n        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            drawerLayout.openDrawer(GravityCompat.START);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        if (fragmentManager.getBackStackEntryCount() > 0) {\r\n            fragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE);\r\n        }\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.main_menu_shortcuts:\r\n                show(new ShortcutsFragment());\r\n                break;\r\n            case R.id.main_menu_containers:\r\n                show(new ContainersFragment());\r\n                break;\r\n            case R.id.main_menu_input_controls:\r\n                show(new InputControlsFragment(selectedProfileId));\r\n                break;\r\n            case R.id.main_menu_box_rc:\r\n                show(new Box86_64RCFragment());\r\n                break;\r\n            case R.id.main_menu_contents:\r\n                show(new ContentsFragment());\r\n                break;\r\n            case R.id.main_menu_saves:\r\n                show(new SavesFragment());\r\n                break;\r\n            case R.id.main_menu_settings:\r\n                show(new SettingsFragment());\r\n                break;\r\n            case R.id.main_menu_about:\r\n                showAboutDialog();\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private void show(Fragment fragment) {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        fragmentManager.beginTransaction()\r\n                .replace(R.id.FLFragmentContainer, fragment)\r\n                .commit();\r\n\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n    }\r\n\r\n    private void showAboutDialog() {\r\n        ContentDialog dialog = new ContentDialog(this, R.layout.about_dialog);\r\n        dialog.findViewById(R.id.LLBottomBar).setVisibility(View.GONE);\r\n\r\n        try {\r\n            final PackageInfo pInfo = getPackageManager().getPackageInfo(getPackageName(), 0);\r\n\r\n            TextView tvWebpage = dialog.findViewById(R.id.TVWebpage);\r\n            tvWebpage.setText(Html.fromHtml(\"<a href=\\\"https://www.winlator.org\\\">winlator.org</a>\", Html.FROM_HTML_MODE_LEGACY));\r\n            tvWebpage.setMovementMethod(LinkMovementMethod.getInstance());\r\n\r\n            ((TextView) dialog.findViewById(R.id.TVAppVersion)).setText(getString(R.string.version) + \" \" + pInfo.versionName);\r\n\r\n            String creditsAndThirdPartyAppsHTML = String.join(\"<br />\",\r\n                    \"Ubuntu RootFs (<a href=\\\"https://releases.ubuntu.com/focal\\\">Focal Fossa</a>)\",\r\n                    \"Wine (<a href=\\\"https://www.winehq.org\\\">winehq.org</a>)\",\r\n                    \"Box86/Box64 by <a href=\\\"https://github.com/ptitSeb\\\">ptitseb</a>\",\r\n                    \"PRoot (<a href=\\\"https://proot-me.github.io\\\">proot-me.github.io</a>)\",\r\n                    \"Mesa (Turnip/Zink/VirGL) (<a href=\\\"https://www.mesa3d.org\\\">mesa3d.org</a>)\",\r\n                    \"DXVK (<a href=\\\"https://github.com/doitsujin/dxvk\\\">github.com/doitsujin/dxvk</a>)\",\r\n                    \"VKD3D (<a href=\\\"https://gitlab.winehq.org/wine/vkd3d\\\">gitlab.winehq.org/wine/vkd3d</a>)\",\r\n                    \"D8VK (<a href=\\\"https://github.com/AlpyneDreams/d8vk\\\">github.com/AlpyneDreams/d8vk</a>)\",\r\n                    \"CNC DDraw (<a href=\\\"https://github.com/FunkyFr3sh/cnc-ddraw\\\">github.com/FunkyFr3sh/cnc-ddraw</a>)\"\r\n            );\r\n\r\n            TextView tvCreditsAndThirdPartyApps = dialog.findViewById(R.id.TVCreditsAndThirdPartyApps);\r\n            tvCreditsAndThirdPartyApps.setText(Html.fromHtml(creditsAndThirdPartyAppsHTML, Html.FROM_HTML_MODE_LEGACY));\r\n            tvCreditsAndThirdPartyApps.setMovementMethod(LinkMovementMethod.getInstance());\r\n\r\n            String glibcExpVersionForkHTML = String.join(\"<br />\",\r\n                    \"longjunyu2's <a href=\\\"https://github.com/longjunyu2/winlator/tree/use-glibc-instead-of-proot\\\">(Fork)</a> + cmod by coffincolors\");\r\n            TextView tvGlibcExpVersionFork = dialog.findViewById(R.id.TVGlibcExpVersionFork);\r\n            tvGlibcExpVersionFork.setText(Html.fromHtml(glibcExpVersionForkHTML, Html.FROM_HTML_MODE_LEGACY));\r\n            tvGlibcExpVersionFork.setMovementMethod(LinkMovementMethod.getInstance());\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        catch (PackageManager.NameNotFoundException e) {}\r\n\r\n        dialog.show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/winlator/MainActivity.java b/src/main/java/com/winlator/MainActivity.java
--- a/src/main/java/com/winlator/MainActivity.java	
+++ b/src/main/java/com/winlator/MainActivity.java	
@@ -334,7 +334,7 @@
         } catch (PackageManager.NameNotFoundException e) {
             e.printStackTrace();
         }
-        catch (PackageManager.NameNotFoundException e) {}
+
 
         dialog.show();
     }
